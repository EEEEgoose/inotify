name: docker_release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Check out the repo
      uses: actions/checkout@v4
      
    - name: Cache node modules NPM
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules-NPM
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}

    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ./Inotify.Vue/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}

    - name: InstallNode and BuildVue
      run: |
        cd ./Inotify.Vue
        npm install
        npm run build:prod

    #-
    #  name: Login to DockerHub
    #  uses: docker/login-action@v3
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - 
      name: Docker Build & Push to Docker Hub For Service
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Inotify/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
          # 开启构建缓存，加速后续构建
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 'Report Suecss'
      run: curl ${{ secrets.INOTIFY }}/Inotify/latestIsOK!
