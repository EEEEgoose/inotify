name: docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 1. Check out the repository code
    - name: Check out the repo
      uses: actions/checkout@v4

    # 2. Cache npm's global directory
    - name: Cache node modules NPM
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules-NPM
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    # 3. Cache the project's local node_modules directory
    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ./Inotify.Vue/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./Inotify.Vue/package.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    # 4. Install dependencies and build the Vue project
    - name: InstallNode and BuildVue
      run: |
        cd ./Inotify.Vue
        npm install
        npm run build:prod

    # 5. Set up Docker Buildx for advanced features like caching
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 6. Login to Docker Hub
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    # 7. Login to GitHub Container Registry (GHCR)
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    # 8. Generate metadata for Docker (tags and labels) for both registries
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/inotify
          ghcr.io/${{ github.repository }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    # 9. Build and push the Docker image to both registries
    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Inotify/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Enable build cache using GitHub Actions cache
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    # 10. Report build status
    - name: 'Report Success'
      run: curl ${{ secrets.INOTIFY }}/Inotify/latestIsOK!
